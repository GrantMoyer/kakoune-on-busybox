--- coreutils/df.c
+++ coreutils/df.c
@@ -77,7 +77,7 @@
 //usage:       "/dev/sda3             17381728  17107080    274648      98% /\n"
 
 #include <mntent.h>
-#include <sys/vfs.h>
+#include <sys/statvfs.h>
 #include "libbb.h"
 #include "unicode.h"
 
@@ -98,7 +98,7 @@ int df_main(int argc UNUSED_PARAM, char **argv)
 	unsigned opt;
 	FILE *mount_table;
 	struct mntent *mount_entry;
-	struct statfs s;
+	struct statvfs s;
 
 	enum {
 		OPT_KILO  = (1 << 0),
@@ -208,7 +208,7 @@ int df_main(int argc UNUSED_PARAM, char **argv)
 		mount_point = mount_entry->mnt_dir;
 		fs_type = mount_entry->mnt_type;
 
-		if (statfs(mount_point, &s) != 0) {
+		if (statvfs(mount_point, &s) != 0) {
 			bb_simple_perror_msg(mount_point);
 			goto set_error;
 		}
index 093412811..36bb9f108
--- libbb/missing_syscalls.c
+++ libbb/missing_syscalls.c
@@ -7,10 +7,11 @@
 //kbuild:lib-y += missing_syscalls.o
 
 /*#include <linux/timex.h> - for struct timex, but may collide with <time.h> */
-#include <sys/syscall.h>
 #include "libbb.h"
 
 #if defined(ANDROID) || defined(__ANDROID__)
+#include <sys/syscall.h>
+
 pid_t getsid(pid_t pid)
 {
 	return syscall(__NR_getsid, pid);
index 6e3ef484e..34ea94afa
--- libbb/udp_io.c
+++ libbb/udp_io.c
@@ -89,7 +89,6 @@ send_to_from(int fd, void *buf, size_t len, int flags,
 		 * and CMSG_DATA returns &u + size_t + int + int.
 		 * Thus direct assignment is ok:
 		 */
-		pktptr->ipi_spec_dst = ((struct sockaddr_in*)from)->sin_addr;
 	}
 # if ENABLE_FEATURE_IPV6 && defined(IPV6_PKTINFO)
 	else if (/* to->sa_family == AF_INET6 && */ from->sa_family == AF_INET6) {
